<Window x:Class="InterviewTest.App.View.SharingFoodWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InterviewTest.App.View" 
        xmlns:conv="clr-namespace:InterviewTest.App.View.Converter"
        xmlns:vm="clr-namespace:InterviewTest.App.ViewModel"
        xmlns:val="clr-namespace:InterviewTest.App.View.Validation"
        mc:Ignorable="d"
        Title="Food Inc - List sharing" Height="350" Width="525" Icon="../Resources/1499284707_fruit_grapes.png">
    <Window.Resources>
        <conv:HealthIndexColorConverter x:Key="HealthIndexColorConverter"/>
        <conv:NullOrEmptyStringToBoolConverter x:Key="NullOrEmptyStringToBoolConverter"/>
        <conv:ZeroToBoolConverter x:Key="ZeroToBoolConverter"/>
        <vm:SharingFoodVm x:Key="vm"/>
    </Window.Resources>
    <Grid DataContext="{StaticResource vm}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox Name="ProductListBox" HorizontalContentAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" Margin="5"
                          Background="{Binding HealthIndex, Converter={StaticResource HealthIndexColorConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalAlignment="Center" Content="{Binding Count}" Margin="0" />
                            <Label VerticalAlignment="Center" Margin="0">x</Label>
                            <Label VerticalAlignment="Center" Margin="0" Content="{Binding Name}" FontWeight="Bold"
                                   FontSize="20" />
                        </StackPanel>
                        <Label Grid.Row="1" Content="{Binding UnitPrice}" FontWeight="Light" FontStyle="Italic"
                               ContentStringFormat="{}{0} $" />
                        <Label Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.RowSpan="2"
                               Content="{Binding TotalPrice}" FontSize="30" ContentStringFormat="{}{0} $" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Column="1" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="124*" />
                <ColumnDefinition Width="135*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="45*" />
                <RowDefinition Height="34*" />
                <RowDefinition Height="46*" />
                <RowDefinition Height="57*" />
                <RowDefinition Height="138*" />
            </Grid.RowDefinitions>
            <Label Content="Add something to the list:" HorizontalAlignment="Left" Margin="10,10,0,0"
                   VerticalAlignment="Top" Grid.ColumnSpan="2" FontWeight="Bold" />
            <Label Content="Type" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="1" VerticalAlignment="Top" />
            <ComboBox x:Name="TypeComboBox" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top"
                 Width="120" ItemsSource="{Binding Types}" SelectedItem="{Binding SelectedType, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Name" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="2" VerticalAlignment="Top" />
            <TextBox x:Name="TxtName" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="0,10,0,0"
                     Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="{Binding Name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Quantity" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="3"
                   VerticalAlignment="Top" />
            <TextBox x:Name="TxtQuantity" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="0,13,0,0"
                     Grid.Row="3" TextWrapping="Wrap" VerticalAlignment="Top" Width="120">
                <TextBox.Text>
                    <Binding Path="Quantity" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:PositiveNumberValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Unit Price" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="4"
                   VerticalAlignment="Top" />
            <TextBox x:Name="TxtUnitPrice" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="5,13,0,0"
                     Grid.Row="4" TextWrapping="Wrap" VerticalAlignment="Top" Width="120">
                <TextBox.Text>
                    <Binding Path="UnitPrice" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:PositiveNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button x:Name="AddButton" Content="Add" Grid.Column="1" HorizontalAlignment="Left" Margin="34,106,0,0"
        Grid.Row="4" VerticalAlignment="Top" Width="75" Command="{Binding AddProductCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Name, Converter={StaticResource NullOrEmptyStringToBoolConverter}}" Value="True"/>
                                    <Condition Binding="{Binding SelectedType, Converter={StaticResource NullOrEmptyStringToBoolConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Quantity, Converter={StaticResource ZeroToBoolConverter}}" Value="True"/>
                                    <Condition Binding="{Binding UnitPrice, Converter={StaticResource ZeroToBoolConverter}}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=TxtQuantity, Path=(Validation.HasError)}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TxtUnitPrice, Path=(Validation.HasError)}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <StackPanel Grid.Row="1">
            <Button x:Name="CheckStoreAvailabilityButton">Check store availability</Button>
        </StackPanel>
    </Grid>
</Window>